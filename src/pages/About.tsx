import Header from '@/components/Header';
import { Card, CardContent } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { TrendingUp, BarChart3, Brain, Target } from 'lucide-react';
import { useEffect, useState } from 'react';
import { blogService } from '@/lib/blogService';
import { blogSettingsService, BlogSettings } from '@/lib/blogSettings';

const About = () => {
  const [stats, setStats] = useState([
    { label: 'B√†i vi·∫øt', value: '0', icon: TrendingUp },
    { label: 'Ch·ªß ƒë·ªÅ', value: '0', icon: BarChart3 },
    { label: 'L∆∞·ª£t xem', value: '0', icon: Brain },
    { label: 'L∆∞·ª£t th√≠ch', value: '0', icon: Target },
  ]);
  
  const [settings, setSettings] = useState<BlogSettings | null>(null);

  useEffect(() => {
    const loadData = async () => {
      try {
        // Load stats
        const posts = await blogService.getAllPosts();
        const totalViews = posts.reduce((sum, post) => sum + (post.views || 0), 0);
        const totalLikes = posts.reduce((sum, post) => sum + (post.likes || 0), 0);
        
        // Get unique tags
        const allTags = posts.flatMap(post => post.tags);
        const uniqueTags = new Set(allTags);

        setStats([
          { label: 'B√†i vi·∫øt', value: `${posts.length}+`, icon: TrendingUp },
          { label: 'Ch·ªß ƒë·ªÅ', value: `${uniqueTags.size}+`, icon: BarChart3 },
          { label: 'L∆∞·ª£t xem', value: `${totalViews}+`, icon: Brain },
          { label: 'L∆∞·ª£t th√≠ch', value: `${totalLikes}+`, icon: Target },
        ]);

        // Load settings
        const blogSettings = await blogSettingsService.getSettings();
        setSettings(blogSettings);
      } catch (error) {
        console.error('Error loading data:', error);
      }
    };

    loadData();
  }, []);

  return (
    <div className="min-h-screen bg-gray-50">
      <Header />
      
      <main className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        {/* Hero Section */}
        <div className="text-center mb-16">
          <h1 className="text-4xl md:text-5xl font-bold text-gray-900 mb-6">
            V·ªÅ {settings?.blogTitle || 'Quantitative Trading Blog'}
          </h1>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed">
            {settings?.blogDescription || 'Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi blog chuy√™n v·ªÅ giao d·ªãch ƒë·ªãnh l∆∞·ª£ng! ƒê√¢y l√† n∆°i t√¥i chia s·∫ª ki·∫øn th·ª©c, kinh nghi·ªám v√† nh·ªØng kh√°m ph√° trong th·∫ø gi·ªõi Quantitative Trading. T·ª´ nh·ªØng kh√°i ni·ªám c∆° b·∫£n ƒë·∫øn c√°c chi·∫øn l∆∞·ª£c ph·ª©c t·∫°p, t√¥i hy v·ªçng s·∫Ω gi√∫p b·∫°n hi·ªÉu r√µ h∆°n v·ªÅ lƒ©nh v·ª±c th√∫ v·ªã n√†y.'}
          </p>
        </div>

        {/* Stats */}
        <div className="grid grid-cols-2 md:grid-cols-4 gap-6 mb-16">
          {stats.map((stat, index) => (
            <Card key={index} className="text-center p-6">
              <CardContent className="p-0">
                <stat.icon className="h-8 w-8 text-blue-600 mx-auto mb-3" />
                <div className="text-3xl font-bold text-gray-900 mb-1">{stat.value}</div>
                <div className="text-gray-600">{stat.label}</div>
              </CardContent>
            </Card>
          ))}
        </div>

        {/* Mission */}
        <div className="mb-16">
          <Card className="p-8">
            <h2 className="text-3xl font-bold text-gray-900 mb-6 text-center">
              {settings?.missionTitle || 'M·ª•c ti√™u c·ªßa blog'}
            </h2>
            <div className="grid md:grid-cols-3 gap-8">
              <div className="text-center">
                <div className="bg-blue-100 rounded-full p-4 w-16 h-16 mx-auto mb-4 flex items-center justify-center">
                  <TrendingUp className="h-8 w-8 text-blue-600" />
                </div>
                <h3 className="text-xl font-semibold mb-3">Gi√°o d·ª•c</h3>
                <p className="text-gray-600">
                  {settings?.educationDescription || 'Chia s·∫ª ki·∫øn th·ª©c v·ªÅ Quantitative Trading t·ª´ c∆° b·∫£n ƒë·∫øn n√¢ng cao'}
                </p>
              </div>
              <div className="text-center">
                <div className="bg-green-100 rounded-full p-4 w-16 h-16 mx-auto mb-4 flex items-center justify-center">
                  <BarChart3 className="h-8 w-8 text-green-600" />
                </div>
                <h3 className="text-xl font-semibold mb-3">Th·ª±c h√†nh</h3>
                <p className="text-gray-600">
                  {settings?.practiceDescription || 'H∆∞·ªõng d·∫´n th·ª±c hi·ªán backtesting v√† ph√°t tri·ªÉn trading strategies'}
                </p>
              </div>
              <div className="text-center">
                <div className="bg-purple-100 rounded-full p-4 w-16 h-16 mx-auto mb-4 flex items-center justify-center">
                  <Brain className="h-8 w-8 text-purple-600" />
                </div>
                <h3 className="text-xl font-semibold mb-3">Nghi√™n c·ª©u</h3>
                <p className="text-gray-600">
                  {settings?.researchDescription || 'Kh√°m ph√° c√°c ph∆∞∆°ng ph√°p m·ªõi trong machine learning v√† AI trading'}
                </p>
              </div>
            </div>
          </Card>
        </div>

        {/* About Author */}
        <div className="mb-16">
          <h2 className="text-3xl font-bold text-gray-900 mb-8 text-center">
            V·ªÅ t√°c gi·∫£
          </h2>
          <Card className="overflow-hidden">
            <CardContent className="p-8">
              <div className="flex flex-col md:flex-row items-center gap-8">
                <div className="flex-shrink-0">
                  <img 
                    src={settings?.authorImage || "https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=200&h=200&fit=crop&crop=face"} 
                    alt="Author"
                    className="w-32 h-32 rounded-full object-cover"
                  />
                </div>
                <div className="text-center md:text-left">
                  <h3 className="text-2xl font-semibold text-gray-900 mb-2">
                    {settings?.authorName || 'Quant Trader & Developer'}
                  </h3>
                  <div className="flex flex-wrap gap-2 mb-4 justify-center md:justify-start">
                    <Badge variant="outline">Python</Badge>
                    <Badge variant="outline">Machine Learning</Badge>
                    <Badge variant="outline">Financial Analysis</Badge>
                    <Badge variant="outline">Algorithmic Trading</Badge>
                  </div>
                  <p className="text-gray-600 leading-relaxed">
                    {settings?.authorBio || 'V·ªõi nhi·ªÅu nƒÉm kinh nghi·ªám trong lƒ©nh v·ª±c t√†i ch√≠nh v√† c√¥ng ngh·ªá, t√¥i ƒëam m√™ nghi√™n c·ª©u v√† ph√°t tri·ªÉn c√°c chi·∫øn l∆∞·ª£c giao d·ªãch ƒë·ªãnh l∆∞·ª£ng. T√¥i tin r·∫±ng vi·ªác k·∫øt h·ª£p ki·∫øn th·ª©c to√°n h·ªçc, th·ªëng k√™ v√† l·∫≠p tr√¨nh c√≥ th·ªÉ t·∫°o ra nh·ªØng c∆° h·ªôi ƒë·∫ßu t∆∞ hi·ªáu qu·∫£ v√† b·ªÅn v·ªØng.'}
                  </p>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>

        {/* Topics Covered */}
        <div className="mb-16">
          <h2 className="text-3xl font-bold text-gray-900 mb-8 text-center">
            Ch·ªß ƒë·ªÅ ch√≠nh
          </h2>
          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
            {(settings?.mainTopics || [
              'Quantitative Analysis',
              'Python for Finance',
              'Backtesting Strategies',
              'Risk Management',
              'Portfolio Optimization',
              'Machine Learning in Trading',
              'Statistical Arbitrage',
              'Market Microstructure',
              'Algorithmic Trading'
            ]).map((topic, index) => (
              <Card key={index} className="p-4 text-center hover:shadow-md transition-shadow">
                <CardContent className="p-0">
                  <h3 className="font-semibold text-gray-900">{topic}</h3>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>

        {/* Contact */}
        <Card className="p-8 text-center bg-gradient-to-r from-blue-50 to-purple-50">
          <h2 className="text-3xl font-bold text-gray-900 mb-4">
            Li√™n h·ªá
          </h2>
          <p className="text-gray-600 mb-6 max-w-2xl mx-auto">
            B·∫°n c√≥ c√¢u h·ªèi v·ªÅ Quantitative Trading ho·∫∑c mu·ªën th·∫£o lu·∫≠n v·ªÅ c√°c chi·∫øn l∆∞·ª£c? 
            T√¥i r·∫•t mong ƒë∆∞·ª£c trao ƒë·ªïi v·ªõi b·∫°n!
          </p>
          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <Badge variant="outline" className="px-4 py-2">
              üìß {settings?.contactEmail || 'quanttrader@example.com'}
            </Badge>
            <Badge variant="outline" className="px-4 py-2">
              üíº {settings?.linkedinUrl || 'LinkedIn: Quant Trader'}
            </Badge>
          </div>
        </Card>
      </main>
    </div>
  );
};

export default About;
